name: SGO-ENGII

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: sgo_engii_ci  # Nome do banco temporário para CI
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Necessário para o SonarQube

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install psycopg2-binary flake8 coverage

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Configure PostgreSQL for CI
        run: |
          echo "DATABASE_URL=postgres://postgres:postgres@localhost:5432/sgo_engii_ci" >> .env
          echo "DEBUG=True" >> .env

      - name: Run tests with PostgreSQL
        run: |
          python manage.py test --keepdb

      - name: Run Coverage
        run: |
          coverage run manage.py test --keepdb
          coverage xml

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: http://labens.dct.ufrn.br/sonarqube
        with:
          args: >
            -Dsonar.projectKey=sgo-engii
            -Dsonar.projectName=SGO-ENGII
            -Dsonar.sources=.
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.exclusions=**/tests/**,docs/**,**/static/**,**/templates/**,**/migrations/**,**/__pycache__/**,**/admin.py,**/__init__.*,manage.py,**/sonar-project.properties
            -Dsonar.test.inclusions=**/test_**.py,**/tests_**.py,**/tests.py

      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
